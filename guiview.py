import tkinter as tk
import random

import param

font = param.FONT
random.seed(111)

def random_color():
    hex = ['5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']
    kod = '#'
    for i in range(0, 6):
        kod += random.choice(hex)
    return kod


def random_coord():
    return random.randint(25,325)


def create_box(canvas, weight, value, final=False):
    global pos_x
    global pos_y

    if final:
        pos_y = pos_y+40
    else:
        pos_x = random_coord()
        pos_y = random_coord()

    color = random_color()
    ingotBase = [pos_x, pos_y,
                 pos_x + 75, pos_y,
                 pos_x + 68, pos_y - 20,
                 pos_x + 7, pos_y - 20]
    ingotTop = [pos_x + 68, pos_y - 20,
                pos_x + 7, pos_y - 20,
                pos_x + 15, pos_y - 25,
                pos_x + 60, pos_y - 25]
    canvas.create_polygon(ingotBase, outline="gray30", fill=color, width=2)
    canvas.create_polygon(ingotTop, outline="gray40", fill=color, width=1)
    canvas.create_text(pos_x + 38, pos_y - 11, fill="#111", text="{}kg {}z≈Ç".format(weight, value))


def buttonClick(pole, b, items, input_bin):
    pole.delete("all")
    random.seed(55)

    pole.create_image((150, 190), image=img)
    pole.create_text(150,175,fill="#111",text="Limit: {}kg".format(param.MAX_WEIGHT),font=(font,12))

    global pos_x, pos_y
    pos_x, pos_y = 250, 100
    for item in items:
        create_box(pole, item[0], item[1], final=True)

    b.configure(text='Pokaz historie generacji', command=input_bin.showGraph)


def showGui(items, map, input_bin):
    root = tk.Toplevel()
    root.geometry("500x700")
    root.configure(background="#444")

    canvas = tk.Canvas(root, width=400, height=400, bg='#555', highlightthickness=0, bd=1)

    global img
    img = tk.PhotoImage(
        data="")

    for item in items:
        create_box(canvas,items[item][0],items[item][1])

    canvas.pack(pady=15)

    button = tk.Button(root, command=lambda: buttonClick(canvas, button, map, input_bin), text="Uruchom algorytm genetyczny", width=35, font=("Arial", 15),
                      bg="#377758", fg="orange", activebackground="green", activeforeground="yellow")
    button.pack()

    root.mainloop()